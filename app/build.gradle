// CodeCleaner_Start_d8ca82ab-c19c-4690-9ad2-6d8eb19b3e39
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.compose' version '1.5.11'
    id 'com.google.devtools.ksp' version '1.8.22-1.0.11'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.example.keynews'
    compileSdk 34
    buildToolsVersion "34.0.0" // Updated to match compileSdk
    
    // Disable problematic features
    aaptOptions {
        noCompress "tflite"
    }
    
    // Set a fixed JDK for the builds
    ndkVersion "25.1.8937393"
    
    defaultConfig {
        applicationId "com.example.keynews"
        minSdk 28  // Android 9
        targetSdk 34  // Android 14
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        
        // Read API key from local.properties if available
        def localProps = new Properties()
        def localPropsFile = rootProject.file("local.properties")
        if (localPropsFile.exists()) {
            localPropsFile.withInputStream { localProps.load(it) }
        }
        buildConfigField("String", "API_KEY", "\"${localProps.getProperty('apiKey', '')}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        // Using Java 8 for maximum compatibility with Android 9-14
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        viewBinding true
        buildConfig true
    }
    
    // Add KSP options for Room
    ksp {
        arg("room.schemaLocation", "$projectDir/schemas")
    }
}

// Work around the JDK image transform issues
tasks.withType(JavaCompile).configureEach {
    // Skip JDK image transforms by using legacy options
    options.compilerArgs += [
        "-Xlint:none",
        "-Xdoclint:none",
        "-nowarn"
    ]
    // Let Android Gradle Plugin handle the bootclasspath
    // Don't set options.release as it conflicts with AGP
}

// Set JVM target explicitly for Kotlin tasks
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.6"
        languageVersion = "1.6"
        freeCompilerArgs += ["-Xjvm-default=disable"]
    }
}

// Disable the androidJdkImage transformation
project.tasks.configureEach { task ->
    if (task.name.contains('androidJdkImage') || task.name.contains('transform')) {
        // Skip any task related to JDK image transformation
        task.onlyIf { false }
        task.enabled = false
    }
}

// Helper function to find SDK 34 compatible versions
def findCompatibleVersion(group, name) {
    // Known compatible versions for SDK 34
    def versionMap = [
        'androidx.activity:activity': '1.8.2',
        'androidx.activity:activity-ktx': '1.8.2',
        'androidx.activity:activity-compose': '1.8.2',
        'androidx.emoji2:emoji2': '1.4.0',
        'androidx.emoji2:emoji2-views-helper': '1.4.0',
        'androidx.core:core-ktx': '1.12.0',
        'androidx.fragment:fragment': '1.6.2', 
        'androidx.lifecycle:lifecycle-runtime-ktx': '2.7.0',
        'androidx.savedstate:savedstate': '1.2.1'
    ]
    
    def key = "${group}:${name}"
    return versionMap[key]
}

// Add strict dependency resolution to enforce compatible versions
configurations.all {
    resolutionStrategy {
        // Force activity libraries to compatible versions for compileSdk 34
        force "androidx.activity:activity:1.8.2"
        force "androidx.activity:activity-ktx:1.8.2"
        force "androidx.activity:activity-compose:1.8.2"
        
        // Force emoji2 libraries to compatible versions
        force "androidx.emoji2:emoji2:1.4.0"
        force "androidx.emoji2:emoji2-views-helper:1.4.0"
        
        // Force other potentially problematic dependencies
        force "androidx.core:core-ktx:1.12.0"
        force "androidx.fragment:fragment:1.6.2"
        force "androidx.lifecycle:lifecycle-runtime-ktx:2.7.0"
        force "androidx.savedstate:savedstate:1.2.1"
        
        // Explicitly handle any dependency that tries to pull in newer versions
        eachDependency { details ->
            if (details.requested.group == 'androidx.activity' && 
                (details.requested.version.startsWith('1.9') || details.requested.version.startsWith('2.'))) {
                details.useVersion('1.8.2')
                details.because("Activity newer versions might require compileSdk > 34, using 1.8.2 instead")
            }
            // Handle other androidx libraries that might require compileSdk > 34
            if (details.requested.group.startsWith('androidx.') && 
                details.requested.name != 'compose-bom') { // Don't downgrade the BOM itself
                // Check if this is a dependency requiring SDK > 34
                if (details.requested.version?.endsWith('.0') == true || 
                    details.requested.version?.startsWith('1.4.0') == true) {
                    // Try to find an older version that's compatible
                    def compat = findCompatibleVersion(details.requested.group, details.requested.name)
                    if (compat) {
                        details.useVersion(compat)
                        details.because("Using SDK 33 compatible version")
                    }
                }
            }
        }
    }
}

dependencies {
    // Use specific versions of lifecycle components that are compatible with SDK 34
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.7.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0"
    implementation "androidx.activity:activity:1.8.2"
    implementation "androidx.activity:activity-ktx:1.8.2"
    implementation "androidx.activity:activity-compose:1.8.2"
    
    // Explicitly add compatible emoji2 versions
    implementation "androidx.emoji2:emoji2:1.4.0"
    implementation "androidx.emoji2:emoji2-views-helper:1.4.0"
    // Add a consistent version of the compose BOM that works with SDK 34
    implementation(platform("androidx.compose:compose-bom:2023.10.01")) {
        // Exclude newer activity and emoji2 dependencies
        exclude group: 'androidx.activity', module: 'activity'
        exclude group: 'androidx.activity', module: 'activity-ktx'
        exclude group: 'androidx.activity', module: 'activity-compose'
        exclude group: 'androidx.emoji2', module: 'emoji2'
        exclude group: 'androidx.emoji2', module: 'emoji2-views-helper'
    }
    implementation(libs.androidx.compose.ui)          // Correct Accessor: libs.androidx.compose.ui
    implementation(libs.androidx.compose.ui.graphics)  // Correct Accessor: libs.androidx.compose.ui.graphics
    implementation(libs.androidx.compose.ui.tooling.preview) // Correct Accessor: libs.androidx.compose.ui.tooling.preview
    implementation(libs.androidx.compose.material3.material3) // Correct Accessor: libs.androidx.compose.material3.material3
    implementation(libs.androidx.drawerlayout.drawerlayout)
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    androidTestImplementation(libs.androidx.espresso.core)
    androidTestImplementation(platform("androidx.compose:compose-bom:2023.10.01")) {
        // Exclude newer activity and emoji2 dependencies in test dependencies too
        exclude group: 'androidx.activity', module: 'activity'
        exclude group: 'androidx.activity', module: 'activity-ktx'
        exclude group: 'androidx.activity', module: 'activity-compose'
        exclude group: 'androidx.emoji2', module: 'emoji2'
        exclude group: 'androidx.emoji2', module: 'emoji2-views-helper'
    }
    androidTestImplementation(libs.androidx.compose.ui.test.junit4) // Correct Accessor: libs.androidx.compose.ui.test.junit4
    debugImplementation(libs.androidx.compose.ui.tooling)    // Correct Accessor: libs.androidx.compose.ui.tooling
    debugImplementation(libs.androidx.compose.ui.test.manifest) // Correct Accessor: libs.androidx.compose.ui.test.manifest
    implementation(libs.material.material)
    implementation(libs.kotlinx.coroutines.core)
    implementation(libs.kotlinx.coroutines.android)

    // Room database with stable version for API compatibility
    implementation "androidx.room:room-runtime:2.5.2"
    implementation "androidx.room:room-ktx:2.5.2"
    ksp "androidx.room:room-compiler:2.5.2"

    // RSS parsing libraries
    implementation "com.rometools:rome:1.18.0"
    implementation "org.jsoup:jsoup:${libs.versions.jsoupVersion.get()}"
    implementation "com.squareup.okhttp3:okhttp:4.11.0"
    
    // Media notifications
    implementation "androidx.media:media:1.6.0"
    
    // ML Kit for language identification
    implementation "com.google.mlkit:language-id:17.0.4"
    
    // GSON for JSON serialization/deserialization
    implementation "com.google.code.gson:gson:2.10.1"

    // Required annotations
    implementation "javax.annotation:javax.annotation-api:1.3.2"
    
    // Gemini API for AI filtering
    implementation "com.google.ai.client.generativeai:generativeai:0.7.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"

    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${libs.versions.kotlin.get()}")
}
// CodeCleaner_End_d8ca82ab-c19c-4690-9ad2-6d8eb19b3e39

